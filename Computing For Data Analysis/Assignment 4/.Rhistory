table(ages)
breaks <- c(0, 5, 12, 18, 25, 34, 45, 54, 70, 85, 100)
labels <- c("0 - 5", "6 - 12", "13 - 18", "19 - 25", "26 - 34", "35 - 45", "46 - 54", "55 - 70", "71 - 85", "86 - 100")
result <- cut(ages, breaks, labels)
df <- data.frame(ages, result)
head(df)
ages <- round(runif(1e6)*(99)) + 1
hist(ages)
result <- cut(ages, breaks, labels)
df <- data.frame(ages, result)
head(df)
head(df[, df$ages == 70])
head(df[, ages == 70])
head(df[ages == 70, ])
head(df[ages == 71, ])
head(df[ages == 85, ])
head(df[ages == 86, ])
# -------------------------------------------------------------------------------
# Airline Passenger Demographics Data Demo
# -------------------------------------------------------------------------------
# - Analytics Global Call
# - Sudeep Conoor
# - September 2013
# -------------------------------------------------------------------------------
# In this demo we'll see how simple R code can yield powerful results
# Generate sample set with 1M data points
# The runif function generates a random uniform variable
# similar to Excel's RAND function
#
# For our case we want to create a uniform sample of ages between 1 and 100
# To do this we generate 1M random uniforms and scale it up by a factor
# of 99, round it and  add 1 to all elements
ages <- round(runif(1e6)*(99)) + 1
# Define a vector with the breaks that you wish to introduce in your data set
breaks <- c(0, 5, 12, 18, 25, 34, 45, 54, 70, 85, 100)
# Define a character vector with labels for each break interval
labels <- c("0 - 5", "6 - 12", "13 - 18", "19 - 25", "26 - 34", "35 - 45", "46 - 54", "55 - 70", "71 - 85", "86 - 100")
# Use the cut function and pass the vectors ages, breaks and labels
result <- cut(ages, breaks, labels)
# Line up the ages and result in a new data frame
df <- data.frame(ages, result)
# Verify results
head(df)
tail(df)
download.file(url="http://curl.haxx.se/ca/cacert.pem", destfile="cacert.pem")
cred <- OAuthFactory$new(consumerKey='8KI8oeRx9xLMkEfaP8ERQ',
consumerSecret='HrGMBPO7sAEJiCKoceNV0vVZeWQW2nVMYYJUzFmF8O0',
requestURL='https://api.twitter.com/oauth/request_token',
accessURL='http://api.twitter.com/oauth/access_token',
authURL='http://api.twitter.com/oauth/authorize')
library(twitteR)
cred <- OAuthFactory$new(consumerKey='8KI8oeRx9xLMkEfaP8ERQ',
consumerSecret='HrGMBPO7sAEJiCKoceNV0vVZeWQW2nVMYYJUzFmF8O0',
requestURL='https://api.twitter.com/oauth/request_token',
accessURL='http://api.twitter.com/oauth/access_token',
authURL='http://api.twitter.com/oauth/authorize')
registerTwitterOAuth(cred)
library(RCurl)
options(RCurlOptions = list(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl")))
registerTwitterOAuth(cred)
cred <- OAuthFactory$new(consumerKey='8KI8oeRx9xLMkEfaP8ERQ',
consumerSecret='HrGMBPO7sAEJiCKoceNV0vVZeWQW2nVMYYJUzFmF8O0',
requestURL='https://api.twitter.com/oauth/request_token',
accessURL='http://api.twitter.com/oauth/access_token',
authURL='http://api.twitter.com/oauth/authorize')
registerTwitterOAuth(cred)
library(ROAuth)
load("~/twitter authentication.Rdata")
r_stats <- searchTwitter("@ATKPAS", n = 5, cainfo = "cacert.pem")
cred <- OAuthFactory$new(consumerKey='8KI8oeRx9xLMkEfaP8ERQ',
consumerSecret='HrGMBPO7sAEJiCKoceNV0vVZeWQW2nVMYYJUzFmF8O0',
requestURL='https://api.twitter.com/oauth/request_token',
accessURL='http://api.twitter.com/oauth/access_token',
authURL='http://api.twitter.com/oauth/authorize')
r_stats <- searchTwitter("@ATKPAS", n = 5, cainfo = "cacert.pem")
registerTwitterOAuth(cred)
load("~/twitter authentication.Rdata")
registerTwitterOAuth(cred)
r_stats <- searchTwitter("@ATKPAS", n = 5, cainfo = "cacert.pem")
r_stats
fix(cred)
cred
install.packages("RHadoop")
library(RHadoop)
system.time(y <- runif(1e7))
system.time(y <- runif(1e8))
dim(y)
length(y)
head(x)
z <- 1:10
z
for i in 1:10:
z[i] * z[i]
for (i in 1:10):
z[i] * z[i]
?for
for ( i in 1:10)
print i
for(i in c(1:10)): i
for(i in 1:5) z[i]
for (i in 1:5) print z[i]*z[i]
for(i in 1:5) print (z[i]*z[i])
z * z
x <- 1:10
y <- 1:10
for(i in 1:10) print(x[i] * y[i])
getwd()
library(twitteR)
load("~/twitter authentication.Rdata")
registerTwitterOAuth(cred)
recent_tweets <- searchTwitter("@ATKPAS", n = 5, cainfo = "cacert.pem")
recent_tweets
remove.packages("sudoku")
ages <- round(runif(1e6)*(99)) + 1
breaks <- c(0, 5, 12, 18, 25, 34, 45, 54, 70, 85, 100)
labels <- c("0 - 5", "6 - 12", "13 - 18", "19 - 25", "26 - 34", "35 - 45", "46 - 54", "55 - 70", "71 - 85", "86 - 100")
result <- cut(ages, breaks, labels)
df <- data.frame(ages, result)
head(df)
setwd("~/Active Tasks/ROSMA Simulation/04_ShinyApp/01_Intro_to_ROSMA/"
)
runApp("/.")
library(shiny)
runApp("/.")
getwd()
setwd("~/Active Tasks/ROSMA Simulation/04_ShinyApp/02_ROSMA_Simulator")
runApp("/.")
dir()
library(shiny)
runApp("./")
setwd("~/")
setwd("~/")
library(twitteR)
load("~/twitter authentication.Rdata")
registerTwitterOAuth(cred)
recent_tweets <- searchTwitter("@ATKPAS", n = 5, cainfo = "cacert.pem")
recent_tweets
x <- c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
x
y <- c(1:10)
y
z <- x * y
z
z[1:5]
z[6:10]
z[11]
z[11] <- 11*11
z
z + 2
names <- c("AppLe", "GooGle", "MICROsoft", "FaceBoOk")
names
tolower(names)
toupper(names)
paste(toupper(names), ", INC.", sep = "")
paste(toupper(names), ", INC.", sep = "--")
os <- read.csv("https://dl.dropboxusercontent.com/u/10064244/office_supplies.csv",
header = TRUE)
head(os, 3)
tail(os, 3)
class(os)
names(os)
names(os) <- tolower(names(os))
names(os)
str(os)
summary(os)
os$item_total <- os$quantity * os$unit_price
head(os)
ages <- round(runif(1e6)*(99)) + 1
hist(ages)
breaks <- c(0, 5, 12, 18, 25, 34, 45, 54, 70, 85, 100)
labels <- c("0 - 5", "6 - 12", "13 - 18", "19 - 25", "26 - 34", "35 - 45", "46 - 54", "55 - 70", "71 - 85", "86 - 100")
result <- cut(ages, breaks, labels)
df <- data.frame(ages, result)
head(df)
library(twitteR)
load("~/twitter authentication.Rdata")
registerTwitterOAuth(cred)
recent_tweets <- searchTwitter("@ATKPAS", n = 5, cainfo = "cacert.pem")
recent_tweets
x <- 4
class(x)
x <- c(4, TRUE)
class(x)
x <- c(1, 3, 5)
y <- c(3, 2, 10)
z <- rbind(x, y)
class(z)
dim(z)
x <- c(17, 14, 4, 5, 13, 12, 10)
x[x > 10] <- 4
x
x <- 1:4
y <- 2
class(x + y)
x <- list(2, "a", "b", TRUE)
x[[2]]
class(x[[2]])
y <- x[[2]]
x[2]
str(y)
class(c(TRUE, FALSE))
d <- read.csv("C:/Users/sconoo01/Downloads/Coursera Courses/Computing for Data Analysis/Quizzes & Assignments/hw1_data.csv")
names(d)
head(d, 2)
rows(d)
length(d)
tail(d, 2)
d[47,]
sum(is.na(d$Ozone))
mean(d$Ozone, na.rm = TRUE)
s1 <- subset(d, Ozone > 31 && Temp > 90)
s1 <- subset(d, d$Ozone > 31 && d$Temp > 90)
s1 <- subset(x = d,subset= Ozone > 31 & Temp > 90)
s1
d
mean(s1$Solar.R, na.rm = TRUE)
d[, d$Month == 6]
d[d$Month == 6, ]
mean(d[d$Month == 6, ]$Temp, na.rm = TRUE
)
max(d[d$Month == 5, ]$Ozone)
max(d[d$Month == 5, ]$Ozone, na.rm = TRUE)
?function
as
x <- c(1, 2, 1, 2, 4, 6, 7)
y <- sort(x)
y
x
z <- list(x)
z
str(z)
which(x, y)
?which
z
z <- list(1, 1, 2, 3 , 2, 1, 4)
z
x
z <- as.factor(x)
z
y <- as.factor(x)
z <- levels(y)
z
z <- as.numeric(levels(y))
z
Unique <- function(x){
y <- as.factor(x)
z <- as.numeric(levels(y))
z
}
Unique(x)
Unique(c("a", "a", "b", "d"))
x <- c("a", "b", "a", "d")
class(x)
y <- as.factor(x)
levels(y)
y <- list(x)
y
z <- as.vector(y)
z
z <- unlist(y)
z
str(y)
ws <- c(1,1,2,1,3,1)
cumsum((unlist(sapply(ws, seq_len)) > 1) + 1)
sapply(ws, seq_len)
x <- 1:10
x[:5]
x[1:4]
x[6:]
zales <- read.table("clipboard", header = TRUE, sep = "\t")
zales <- read.table("clipboard", header = TRUE, sep = ",")
rm(zales)
zales <- read.table("clipboard", header = TRUE)
zales <- readClipboard()
zales <- read.table("clipboard", header = TRUE)
zales <- read.table("clipboard", header = FALSE)
rm(zales)
zales <- read.table("clipboard", header = TRUE, sep = "\t")
zales <- read.table("clipboard", header = TRUE, sep = "\t", fill = TRUE)
head(zales)
names(zales) <- tolower(names(zales))
?gsub
gsub("\.", "",names(zales) )
gsub("\\.", "",names(zales) )
names(zales) <- gsub("\\.", "",names(zales) )
hist(zales$avgsalescogs)
str(zales)
table(zales$avgsalescogs)
tail(zales)
zales[, zales$avgsalescogs == "[CANADA]"]
zales[zales$avgsalescogs == "[CANADA]", ]
zales[zales$avgsalescogs == 2.39, ]
zales[zales$avgsalescogs == "[Canada]", ]
zales[zales$avgsalescogs == "[Canada]", ] <- NULL
zales[zales$avgsalescogs != "[Canada]", ]
z <- zales[zales$avgsalescogs != "[Canada]", ]
z$avgsalescogs <- as.numeric(z$avgsalescogs)
hist(z$avgsalescogs)
table(z$avgsalescogs)
rm(z)
z <- zales[zales$avgsalescogs != "[Canada]", ]
str(z)
x <- unlist(z$avgsalescogs)
table(x)
y <- as.numeric(x)
table(y)
rm(y)
y <- as.numeric(as.character(x))
table(y)
names(y) <- NULL
head(y)
z$avgsalescogs <- y
head(z)
head(zales)
tail(z)
tail(zales)
rm(x)
hist(y)
hist(y, bin = 0.2)
?hist
hist(y, breaks = 0.2)
hist(y, breaks = 20)
hist(y, breaks = 20, xlim = 2)
hist(y, breaks = 20)
hist(y, breaks = 40)
data <- readClipboard()
?hist
data <- readClipboard()
data <- as.numeric(data)
hist(data, breaks = 8)
hist(data, breaks = 16)
hist(data, breaks = 8)
data <- readClipboard()
data <- as.numeric(data)
hist(data)
?install.packages
a <- matrix(1:10, 2, 5)
a
?matrix
x <- 1:6
y <- 5:10
rbind(x, y)
class(rbind(x, y))
?LETTERS
packageStatus
packageStatus()
?packageStatus
installed.packages()
str(a)
d <- read.csv("C:/Users/sconoo01/Downloads/Coursera Courses/Statistics One/Assignments and Quizzes/Stats1.13.HW.02.txt")
head (d)
d <- read.table("C:/Users/sconoo01/Downloads/Coursera Courses/Statistics One/Assignments and Quizzes/Stats1.13.HW.02.txt",
header = TRUE,)
d <- read.table("C:/Users/sconoo01/Downloads/Coursera Courses/Statistics One/Assignments and Quizzes/Stats1.13.HW.02.txt",
header = TRUE, sep = "\t")
head(d)
str(d)
mean(d$SR)
mean(d$SR)
var(d$SR)
var(d$SR)
mean(d[d$time == "pre", 4])
mean(d[d$time == "pre", 4])
mean(d[d$time == "pre", 4])
x <- (d[d$time == "pre", 4])
x
mean(x)
x <- (d[d$time == "post", 4])
var(x)
options(digits = 2)
var(x)
median(x)
head(d)
str(d)
tapply(condition, x, mean)
tapply(x, condition, mean)
split
?split
x
x <- d[d$time == "post", ]
tapply(condition, x, mea)
tapply(condition, x, mean)
tapply(x, condition mean)
tapply(x, condition, mean)
x <- split(d, condition)
x <- split(d, d$condition)
sapply(x, mean)
sapply(x, hist)
?split
x <- split(d, c(d$condition, d$time), drop = TRUE)
x <- split(d, c(d$condition))
x[[1]]
x <- split(d, list(d$condition, d$time), drop = TRUE)
x[[1]]
x[[2]]
hist(x[[1]])
hist(x[[1]]$SR)
lapply(x, function(y) hist(y[[1]]$SR)
)
lapply(x, function(x) hist(x[[1]]$SR))
hist(x[[3]]$SR)
hist(x[[1]]$SR)
hist(x[[2]]$SR)
hist(x[[3]]$SR)
hist(x[[4]]$SR)
hist(x[[5]]$SR)
hist(x[[6]]$SR)
x[[3]]
sapply(x, mean)
install.packages("shiny")
library(PivotalR)
d <- readClipboard()
d <- readClipboard()
head(d)
d1 <- strsplit(d, split="-")
head(d1)
d2 <- unlist(d1)
head(d2)
head(d1, 10)
d1[[1,]]
d1[[1], ]
d1[[1]]
d1[[2]]
d1[[1, ]]
d1[1,]
d1[[1]]
d1[[,]]
d1[[,2]]
d1[[,0]]
x <- sapply(d1, "[", 1)
head(x)
writeClipboard(x)
x <- sapply(d1, "[", 2)
writeClipboard(x)
dev.off()
dev.set(1)
x <- rnorm()
x <- rnorm(100)
hist(x)
dev.set(2)
hist(x)
dev.set(2)
dev.set(3)
dev.off()
x <- rnorm(100)
y <- x + rnorm(100)
par(las = 1)
plot(x, y)
par(las = 2)
plot(x, y)
par(las = 1)
x <- rnorm(100)
plot(x, y)
x1 <- rnorm(10)
y1 <- rnorm(10)
points(x1, y1, col = "red")
b <- as.data.frame(a)
b
b[, 1]
b[, c(1:2)]
?gl
library(lattice)
library(nlme)
xyplot(distance ~ age | Subject, data = Orthodont)
xyplot(distance ~ age | Subject, data = Orthodont, type = "b")
store_sales <- readClipboard()
store_sales <- read.table("clipboard", sep = "\t", header = F)
store_sales <- read.table("clipboard", sep = "\t", header = F)
head(store_sales)
names(store_sales) <- c("store_num", "Q4_sales")
head(store_sales)
str(store_sales)
summary(store_sales)
store_class <- cut(store_sales$Q4_sales, breaks = c(2.5E6, 5E6, 1E7, 2E7), labels = c("Under 0.25M", "Between 0.25 - 0.5M", "Between 0.5 - 1M", "Between 1 - 2M"))
store_class <- cut(store_sales$Q4_sales, breaks = c(2.5E6, 5E6, 1E7), labels = c("Under 0.25M", "Between 0.25 - 0.5M", "Between 0.5 - 1M", "Between 1 - 2M"))
store_class <- cut(store_sales$Q4_sales, breaks = c(2.5E6, 5E6, 1E7))
head(store_class)
head(store_sales$Q4_sales)
store_class <- cut(store_sales$Q4_sales, breaks = as.numeric(c(2.5E6, 5E6, 1E7)))
head(store_class)
install.packages("sentiment")
setwd("C:/Users/sconoo01/Downloads/Coursera Courses/Computing for Data Analysis/Quizzes & Assignments/Assignment 4/")
dir()
homicides <- readLines("homicides.txt")
rm(store_sales)
rm(store_class)
head(homicides)
x <- homicides[1]
x
str(homicides)
?grepl
grep("(?=<dd> Cause: ).*?(?<=\</dt>)",
x,
ignore.case = TRUE,
perl = TRUE)
grep("\(?=<dd> Cause: \).*?\(?<=\</dt>\)",
x,
ignore.case = TRUE,
perl = TRUE)
grep("\(?=<dd> Cause: \).*?\(?<=\</dt>\)", x, ignore.case = TRUE, perl = TRUE)
grep("\\(?=<dd> Cause: \\).*?\\(?<=\</dt>\\)", x, ignore.case = TRUE, perl = TRUE)
grep("(?=<dd> Cause: ).*?(?<=\</dt>)", x, ignore.case = TRUE)
grep("(?=<dd> Cause: ).*?(?<=</dt>)", x, ignore.case = TRUE)
grep("(?=\<dd\> Cause: ).*?(?<=\</dt\>)", x, ignore.case = TRUE)
grep("(?=Cause: ).*?(?<=\</dt\>)", x, ignore.case = TRUE)
grep("(?=Cause: ).*?(?<=</dt>)", x, ignore.case = TRUE)
grep("(?=Cause: ).*?(?<=(</dt>)", x, ignore.case = TRUE)
grep("Cause", x)
x
grep("Cause:", as.character(x))
grep("Cause:", "Sudeep Cause: Homicide")
grepl("Cause:", "Sudeep Cause: Homicide")
